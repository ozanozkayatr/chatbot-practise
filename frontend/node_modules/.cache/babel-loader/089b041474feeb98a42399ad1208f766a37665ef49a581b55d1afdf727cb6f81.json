{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozano\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\case-study\\\\chatbot-ui\\\\src\\\\components\\\\InputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./InputForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm({\n  onSubmit,\n  loading\n}) {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null); // Create a ref for the input element\n\n  // Ensure the input field is focused when the component mounts\n  useEffect(() => {\n    if (inputRef.current) {\n      console.log(\"Input field is focused:\", inputRef.current); // Check if inputRef is correct\n      inputRef.current.focus();\n    }\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input) return;\n    onSubmit(input); // Submit the user's answer\n    setInput(\"\"); // Clear the input field\n\n    // Re-focus the input field immediately after submission\n    setTimeout(() => {\n      inputRef.current.focus(); // Focus after input is cleared\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"chat-input-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: loading ? \"Loading...\" : \"Type your message...\",\n      disabled: loading,\n      ref: inputRef // Attach the ref to the input element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? \"...\" : \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"L4PHAXzkMJpffDX+ToyKGE7+5Ro=\");\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","InputForm","onSubmit","loading","_s","input","setInput","inputRef","current","console","log","focus","handleSubmit","e","preventDefault","setTimeout","className","children","type","value","onChange","target","placeholder","disabled","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ozano/OneDrive/Masaüstü/case-study/chatbot-ui/src/components/InputForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./InputForm.css\";\r\n\r\nfunction InputForm({ onSubmit, loading }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const inputRef = useRef(null); // Create a ref for the input element\r\n\r\n  // Ensure the input field is focused when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      console.log(\"Input field is focused:\", inputRef.current); // Check if inputRef is correct\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!input) return;\r\n\r\n    onSubmit(input); // Submit the user's answer\r\n    setInput(\"\"); // Clear the input field\r\n\r\n    // Re-focus the input field immediately after submission\r\n    setTimeout(() => {\r\n      inputRef.current.focus(); // Focus after input is cleared\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"chat-input-form\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder={loading ? \"Loading...\" : \"Type your message...\"}\r\n        disabled={loading}\r\n        ref={inputRef} // Attach the ref to the input element\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"...\" : \"Send\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default InputForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/B;EACAC,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,CAACC,OAAO,EAAE;MACpBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC;MAC1DD,QAAQ,CAACC,OAAO,CAACG,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACT,KAAK,EAAE;IAEZH,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC;IACjBC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEd;IACAS,UAAU,CAAC,MAAM;MACfR,QAAQ,CAACC,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,oBACEX,OAAA;IAAME,QAAQ,EAAEU,YAAa;IAACI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBACvDjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,KAAM;MACbe,QAAQ,EAAGP,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAEnB,OAAO,GAAG,YAAY,GAAG,sBAAuB;MAC7DoB,QAAQ,EAAEpB,OAAQ;MAClBqB,GAAG,EAAEjB,QAAS,CAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAACK,QAAQ,EAAEpB,OAAQ;MAAAc,QAAA,EACrCd,OAAO,GAAG,KAAK,GAAG;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACxB,EAAA,CAxCQH,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}