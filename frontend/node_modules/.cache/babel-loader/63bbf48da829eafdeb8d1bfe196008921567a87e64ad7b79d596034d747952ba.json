{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozano\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\case-study\\\\chatbot-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  // Fetch the current question\n  const getQuestion = async index => {\n    try {\n      const response = await fetch(`http://localhost:3001/chat/question/${index}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch question\");\n      }\n      const data = await response.json();\n      setQuestion(data.question);\n    } catch (error) {\n      console.error(\"Error fetching question:\", error);\n    }\n  };\n\n  // Submit the user's answer and get AI response\n  const submitAnswer = async (userId, index, userAnswer) => {\n    try {\n      const response = await fetch(\"http://localhost:3001/chat/answer\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          questionIndex: index,\n          answer: userAnswer\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to submit answer\");\n      }\n      const data = await response.json();\n      setAiResponse(data.aiResponse); // Update the AI response\n    } catch (error) {\n      console.error(\"Error submitting answer:\", error);\n    }\n  };\n\n  // Handle form submit\n  const handleSubmit = e => {\n    e.preventDefault();\n    submitAnswer(\"12345\", questionIndex, answer); // Hardcoded userId for example purposes\n  };\n\n  // Fetch the first question when the component mounts\n  useEffect(() => {\n    getQuestion(questionIndex);\n  }, [questionIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question: \", question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Your answer...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), aiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AI Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: aiResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setQuestionIndex(questionIndex + 1),\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S3lI57Kxn+zcYRuC3VTlcS9epZY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","question","setQuestion","answer","setAnswer","aiResponse","setAiResponse","questionIndex","setQuestionIndex","getQuestion","index","response","fetch","ok","Error","data","json","error","console","submitAnswer","userId","userAnswer","method","headers","body","JSON","stringify","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ozano/OneDrive/Masaüstü/case-study/chatbot-ui/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  // Fetch the current question\n  const getQuestion = async (index) => {\n    try {\n      const response = await fetch(\n        `http://localhost:3001/chat/question/${index}`\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch question\");\n      }\n      const data = await response.json();\n      setQuestion(data.question);\n    } catch (error) {\n      console.error(\"Error fetching question:\", error);\n    }\n  };\n\n  // Submit the user's answer and get AI response\n  const submitAnswer = async (userId, index, userAnswer) => {\n    try {\n      const response = await fetch(\"http://localhost:3001/chat/answer\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userId,\n          questionIndex: index,\n          answer: userAnswer,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to submit answer\");\n      }\n\n      const data = await response.json();\n      setAiResponse(data.aiResponse); // Update the AI response\n    } catch (error) {\n      console.error(\"Error submitting answer:\", error);\n    }\n  };\n\n  // Handle form submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitAnswer(\"12345\", questionIndex, answer); // Hardcoded userId for example purposes\n  };\n\n  // Fetch the first question when the component mounts\n  useEffect(() => {\n    getQuestion(questionIndex);\n  }, [questionIndex]);\n\n  return (\n    <div>\n      <h1>Chatbot</h1>\n      <div>\n        <h2>Question: {question}</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={answer}\n            onChange={(e) => setAnswer(e.target.value)}\n            placeholder=\"Your answer...\"\n          />\n          <button type=\"submit\">Submit Answer</button>\n        </form>\n      </div>\n      {aiResponse && (\n        <div>\n          <h2>AI Response:</h2>\n          <p>{aiResponse}</p>\n        </div>\n      )}\n      <button onClick={() => setQuestionIndex(questionIndex + 1)}>\n        Next Question\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}